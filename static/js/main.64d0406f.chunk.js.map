{"version":3,"sources":["User.jsx","Tweet.jsx","TweetList.jsx","Search.jsx","App.js","index.js"],"names":["User","props","react_default","a","createElement","className","src","userinfo","profile_image_url_https","alt","screen_name","location","Tweet","console","log","exactTime","tweet","user","created_at","substring","text","TweetList","mytweets","tweets","map","oneTweet","hashtag","action","autoComplete","type","name","value","onChange","onStuffChanged","id","placeholder","App","state","stuffChanged","evt","target","_this","setState","length","fetch","then","res","json","data","statuses","Search_Tweet","this","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"oMAGe,SAASA,EAAKC,GAC3B,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OACEE,IAAKL,EAAMM,SAASC,wBACpBC,IAAI,cACJJ,UAAU,YAGdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,cAAMH,EAAMM,SAASG,aACrBR,EAAAC,EAAAC,cAAA,UAAKH,EAAMM,SAASI,YCZb,SAASC,EAAMX,GAC5BY,QAAQC,IAAIb,GACZ,IAAMc,EAAYd,EAAMe,MAAMC,KAAKC,WAAWC,UAAU,EAAG,IAC3D,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAACJ,EAAD,CAAMO,SAAUN,EAAMe,MAAMC,OAC5Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYU,GAC1Bb,EAAAC,EAAAC,cAAA,sBAAcH,EAAMe,MAAMI,KAA1B,KAEElB,EAAAC,EAAAC,cAAA,OACEE,IAAI,iCACJG,IAAI,UACJJ,UAAU,eCfT,SAASgB,EAAUpB,GAEhC,IAAMqB,EAAWrB,EAAMsB,OAAOC,IAAI,SAAAC,GAChC,OAAOvB,EAAAC,EAAAC,cAACQ,EAAD,CAAOI,MAAOS,MAGvB,OAAOvB,EAAAC,EAAAC,cAAA,WAASC,UAAU,WAAWiB,GCPxB,SAASV,EAAMX,GAC5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2BAAmBH,EAAMyB,SACzBxB,EAAAC,EAAAC,cAAA,QAAMuB,OAAO,IACXzB,EAAAC,EAAAC,cAAA,SACEwB,aAAa,MACbC,KAAK,OACLC,KAAK,SACLC,MAAO9B,EAAMyB,QACbM,SAAU/B,EAAMgC,eAChBC,GAAG,SACHC,YAAY,6BAEdjC,EAAAC,EAAAC,cAAA,SAAO8B,GAAG,gBAAgBH,MAAM,aAAaF,KAAK,iBCmC3CO,6MAhDbC,MAAQ,CACNd,OAAQ,GACRG,QAAS,MAaXY,aAAe,SAAAC,GACb1B,QAAQC,IAAIyB,EAAIC,OAAOT,OACvBU,EAAKC,SAAS,CACZhB,QAASa,EAAIC,OAAOT,QAElBQ,EAAIC,OAAOT,MAAMY,OAAS,GAC5BC,MACE,+CACEL,EAAIC,OAAOT,MACX,aAEDc,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAEJP,EAAKC,SAAS,CACZnB,OAAQyB,EAAKC,mIAMrB,OACE/C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8C,EAAD,CACEjB,eAAgBkB,KAAKb,aACrBZ,QAASyB,KAAKd,MAAMX,UAEtBxB,EAAAC,EAAAC,cAACiB,EAAD,CAAWE,OAAQ4B,KAAKd,MAAMd,iBA3CpB6B,aCClBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.64d0406f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n/* <User/>  */\r\nexport default function User(props) {\r\n  return (\r\n    <header className=\"user\">\r\n      <div className=\"userAvatar\">\r\n        <h1>User:</h1>\r\n        <img\r\n          src={props.userinfo.profile_image_url_https}\r\n          alt=\"user avatar\"\r\n          className=\"avatar\"\r\n        />\r\n      </div>\r\n      <div className=\"userPost\">\r\n        <h3>@{props.userinfo.screen_name}</h3>\r\n        <h4>{props.userinfo.location}</h4>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport User from \"./User\";\r\n\r\n/* <Tweet/>  */\r\nexport default function Tweet(props) {\r\n  console.log(props);\r\n  const exactTime = props.tweet.user.created_at.substring(0, 20);\r\n  return (\r\n    <div className=\"grid\">\r\n      <article className=\"article\">\r\n        <User userinfo={props.tweet.user} />\r\n        <div className=\"tweet\">\r\n          <h2 className=\"postTime\">Tweeted at :</h2>\r\n          <h3 className=\"postTime\">{exactTime}</h3>\r\n          <blockquote>\"{props.tweet.text}\"</blockquote>\r\n          {\r\n            <img\r\n              src=\"/retweet-arrow-twitter-512.png\"\r\n              alt=\"retweet\"\r\n              className=\"retweet\"\r\n            />\r\n          }\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet\";\r\n\r\n/* <TweetList/>  */\r\nexport default function TweetList(props) {\r\n  //props.tweets\r\n  const mytweets = props.tweets.map(oneTweet => {\r\n    return <Tweet tweet={oneTweet} />;\r\n    // console.log(oneTweet);\r\n  });\r\n  return <section className=\"section\">{mytweets}</section>;\r\n}\r\n","import React from \"react\";\r\n\r\n/* <Tweet/>  */\r\nexport default function Tweet(props) {\r\n  return (\r\n    <div className=\"wrap\">\r\n      <h1>#TwitterFeed</h1>\r\n      <p>Searching for #{props.hashtag}</p>\r\n      <form action=\"\">\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          name=\"search\"\r\n          value={props.hashtag}\r\n          onChange={props.onStuffChanged}\r\n          id=\"search\"\r\n          placeholder=\"Type a #hashtag to start\"\r\n        />\r\n        <input id=\"search_submit\" value=\"Rechercher\" type=\"submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport TweetList from \"./TweetList\";\nimport Search from \"./Search\";\n\nclass App extends Component {\n  state = {\n    tweets: [],\n    hashtag: \"\"\n  };\n  componentDidMount() {\n    //done once\n    // fetch(\"https://kea-alt-del.dk/twitter/api/?hashtag=react&count=20\")\n    //   .then(res => res.json())\n    //   .then(data => {\n    //     // console.log(data);\n    //     this.setState({\n    //       tweets: data.statuses\n    //     });\n    //   });\n  }\n  stuffChanged = evt => {\n    console.log(evt.target.value);\n    this.setState({\n      hashtag: evt.target.value\n    });\n    if (evt.target.value.length > 1) {\n      fetch(\n        \"https://kea-alt-del.dk/twitter/api/?hashtag=\" +\n          evt.target.value +\n          \"&count=10\"\n      )\n        .then(res => res.json())\n        .then(data => {\n          // console.log(data);\n          this.setState({\n            tweets: data.statuses\n          });\n        });\n    }\n  };\n  render() {\n    return (\n      <main>\n        <Search\n          onStuffChanged={this.stuffChanged}\n          hashtag={this.state.hashtag}\n        />\n        <TweetList tweets={this.state.tweets} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}